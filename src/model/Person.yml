#
# Describes the structure of a Person
# Used to create an empty person (object of class src/model/Person)
#

# int - id managed by dbms
id: 

slug:

# key / value pairs
# key = source slug
# value = local id within the given source
ids-in-sources: {}

# key / value pairs
# key = id name - necessarily a source slug ?
# value = local id
partial-ids: {}

name:
  given:
  family:
  official:         # As written in the birth certificate
    family:
    given:
  nobl:             # nobiliary-particle: de d' di del von...
  fame:             # stage, scene
    full:           # ex Mistinguett or Stromae
    family: 
    given: 
  alter: []         # alternative names, like nicknames, or author names

sex:

birth:
  date:     # date of the birth certificate
  tzo:      # timezone offset
  date-ut:  # date converted to Universal Time
  note:     # supplementary info (eg precise address of the place)
  lmt:      # boolean - true if date is expressed in LMT
  notime:   # boolean - true if birth time does not exist
  place:
    name:
    c1:
    c2:
    c3:
    cy:
    geoid:
    lg:
    lat:
      
death:
  date:     # date of the birth certificate
  tz:       # timezone offset
  date-ut:  # date converted to Univesal Time
  note:     # supplementary info (eg precise address of the place)
  lmt:      # boolean - true if date is expressed in LMT
  place:
    name:
    c1:
    c2:
    c3:
    cy:
    geoid:
    lg:
    lat:

# occupation slugs
occus: []

# Reliability of birth time
trust:

# map containing act transcriptions.
# keys of this map can be "birth", "death", "mariage"
acts:

history: []

# regular array of strings
issues: []

# regular array of strings
notes: []
