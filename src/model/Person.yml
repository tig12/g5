
#
# Describes the structure of a Person
# Used to create an empty person
#

id: 

slug:

# Regular array of source slugs
sources: []

# key / value pairs
# key = source slug
# value = local id within the given source
ids-in-sources: {}

# key / value pairs
# key = id name - necessarily a source slug ?
# value = local id
ids-partial: {}

name:
  usual:            # not used so far, maybe will be removed
  given:
  family:
  spouse:
  official:         # As written in the birth certificate
    family:
    given:
  nobl:             # nobiliary-particle: de d' di del von...
  fame:             # stage, scene
    full:           # eg Mistinguett or Stromae
    family: 
    given: 
  alter: []         # alternative names, like nicknames, or author names

sex:

birth:
  date:     # date of the birth certificate
  tzo:      # timezone offset
  date-ut:  # date converted to Universal Time
  note:     # eg "LMT" or "notime"
  place:
    name:
    c1:
    c2:
    c3:
    cy:
    geoid:
    lg:
    lat:
      
death:
  date:     # date of the birth certificate
  tz:       # timezone offset
  date-ut:  # date converted to Univesal Time
  note:     # eg "LMT" or "notime"
  place:
    name:
    c1:
    c2:
    c3:
    cy:
    geoid:
    lg:
    lat:

# occupation slugs
occus: []

# Reliability of the information
# Can be a number or a key-value map
# See docs/db-person.html for details
trust:

# regular array of paths to sub-directories of acts/
acts: []

history: []

# key / value pairs
# keys: string identifying the kind of check needed
# keys can be any string - standard keys exist, see constants of class model.Issue
# values: description of the reason leading to the need to check the person
# Note: initialized to null because php cannot make the difference between
# initialization to empty map {} and empty array []
issues: 

notes: []
