<?php
/********************************************************************************
    Generation of the original groups published in Gauquelin's book in 1955
    Uses class Data1955, which is generated by tools/generate-1955.php
    The process is :
    - generate serie A csv files (php run-gauquelin5 A)
    - modify the csv file manually, adding a column named '1955'
    - generate class Data1955 with tools/generate-1955.php
    - generate the 1955 groups using this class php run-gauquelin5 1955)
    
    @license    GPL
    @history    2017-05-08 23:39:19+02:00, Thierry Graff : creation
********************************************************************************/
namespace gauquelin5;

use gauquelin5\Gauquelin5;
use gauquelin5\Serie1955Data;
use gauquelin5\init\Config;

class Serie1955{
    
    // *****************************************
    /** 
        Generates the 1955 files from "first-edited" csv files
        @param  $serie  String must be '1955'
        @return report
        @throws Exception if unable to parse
    **/
    public static function cura_1955($serie){
        $dest_dir = Config::$data['1955']['dest-dir'];
        foreach(Serie1955Data::GROUPS as $groupCode => [$groupName, $serie]){
            if(count(Serie1955Data::DATA[$groupCode]) == 0){
                continue; // for groups not treated
            }
            echo "Generating 1955 group $groupCode : $groupName\n";
            $res = [];
            $inputfile = Config::$data['dest-dir'] . DS . $serie . '.csv'; // file generated by class SerieA
            $input = file($inputfile);
            $N = count($input);
            $fieldnames = explode(Gauquelin5::CSV_SEP, $input[0]);
            for($i=1; $i < $N; $i++){
                $fields = explode(Gauquelin5::CSV_SEP, $input[$i]);
                $NUM = $fields[0]; // by convention, all generated csv file have NUM as first field
                if(!in_array($NUM, Serie1955Data::DATA[$groupCode])){
                    continue;
                }
                $res[] = $fields;
            }
            //
            // sort $res
            //
            $sort_field = $groupCode == '570SPO' ? 0 : 1; // @todo read from config
            $res = \lib::sortByKey($res, $sort_field);
            echo '  ' . count($res) . " persons stored\n";
            // generate output
            $output = 'SERIE' . Gauquelin5::CSV_SEP . $input[0]; // field names
            foreach($res as $fields){
                $output .= $serie . Gauquelin5::CSV_SEP . implode(Gauquelin5::CSV_SEP, $fields);
            }
            $dest_file = $dest_dir . DS . $groupCode . '.csv';
            file_put_contents($dest_file, $output);
        }
    }
    
    
}// end class    

