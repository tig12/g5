<?php
/********************************************************************************
    Code to examine 5-tmp/newalch-csv/4391SPO.csv
    (not the raw file, the intermediate file generated by raw2csv.php).
    Not part of any build process - only to try to understand.
    
    @license    GPL
    @history    2019-05-11 18:58:50+02:00, Thierry Graff : creation
********************************************************************************/
namespace g5\transform\newalch\ertel4391;

use g5\init\Config;
use g5\patterns\Command;

class examine implements Command {
    
    const POSSIBLE_PARAMS = [
        'sport',
        'quel',
        'date',
        'eminence',
        'links',
    ];
    
    // *****************************************
    /** 
        Routes to the different actions, based on $param
        @param $param Array containing one element (a string)
                Can be : 'sports', 
    **/
    public static function execute($params=[]): string{
        $possibleParams_str = implode(', ', self::POSSIBLE_PARAMS);
        if(count($params) != 1){
            $msg = "PARAMETER MISSING in g5\\transform\\newalch\\ertel4391.execute(\$params)\n"
                . "Possible parameters : " . $possibleParams_str;
            return $msg;
        }
        switch($params[0]){
        	case 'sport': self::examine_sport(); break;
        	case 'quel': self::examine_quel(); break;
        	case 'date': self::examine_date(); break;
        	case 'eminence': self::examine_eminence(); break;
        	case 'links': self::examine_links(); break;
        	default:
            $msg = "INVALID PARAMETER in g5\\transform\\newalch\\ertel4391.execute(\$params)\n"
                . "Possible parameters : " . $possibleParams_str;
            return $msg;
            break;
        }
        return '';
    }
    
    
    // ******************************************************
    /**
        Look at SPORT and IG columns.
    **/
    public static function examine_sport(){
        $rows = \lib::csvAssociative(Config::$data['dirs']['5-newalch-csv'] . DS . Ertel4391::TMP_CSV_FILE);
        $res = []; // assoc array sport => IG
        foreach($rows as $row){
            if(!isset($res[$row['SPORT']])){
                $res[$row['SPORT']] = $row['IG'];
            }
            else{
                if($res[$row['SPORT']] != $row['IG']){
                    echo "Incoherent association sport / IG, line " . $row['F_NAME'] . ' ' . $row['G_NAME']
                        . ' : ' . $row['SPORT'] . ' ' . $row['IG'] . "\n";
                }
            }
            if(strlen($row['SPORT']) == 3){
                echo $row['SPORT'] . ' ' . $row['NR'] . ' ' . $row['F_NAME']
                        . ' ' . $row['G_NAME'] . ' ' . $row['IG'] . "\n";
            }
        }
        ksort($res);
        print_r($res);
    }
    
    // ******************************************************
    /**
        Look at QUEL column.
    **/
    public static function examine_quel(){
        $rows = \lib::csvAssociative(Config::$data['dirs']['5-newalch-csv'] . DS . Ertel4391::TMP_CSV_FILE);
        $res = []; // assoc codes => nb of records with this code
        foreach($rows as $row){
            if(!isset($res[$row['QUEL']])){
                $res[$row['QUEL']] = 0;
            }
            $res[$row['QUEL']] ++;
        }
        ksort($res);
        echo "\n"; print_r($res); echo "\n";
    }
    
    // ******************************************************
    /**
        Look at DATE column.
    **/
    public static function examine_date(){
        $rows = \lib::csvAssociative(Config::$data['dirs']['5-newalch-csv'] . DS . Ertel4391::TMP_CSV_FILE);
        $N = 0;             // total nb lines
        $nWith = 0;         // nb lines with birth time
        $nWithout = 0;      // nb lines without birth time
        $nWithoutFromG = 0; // nb lines without birth time from Gauquelin LERRCP
        $GCodes = ['*G:D10', 'G:A01', 'G:D06', 'G:D10'];
        foreach($rows as $row){
            $N++;
            $date = $row['DATE'];
            if(strlen($date) == 10){
                $nWithout++;
                if(in_array($row['QUEL'], $GCodes)){
                    $nWithoutFromG++;
                }
            }
            else if(strlen($date) == 16){
                $nWith++;
            }
            else{
                echo 'BUG in date : ' . $row['NR'] . ' ' . $row['F_NAME'] . ' ' . $row['G_NAME'] . ' : ' . $row['DATE'] . "\n";
            }
        }
        // percent
        $pWith = round($nWith * 100 / $N, 2);
        $pWithout = round($nWithout * 100 / $N, 2);
        echo "N total : $N\n";
        echo "N with birth time : $nWith ($pWith %)\n";
        echo "N without birth time : $nWithout ($pWithout %)\n";
        echo "N without birth time from Gauquelin LERRCP : $nWithoutFromG\n";
    }
    
    // ******************************************************
    /**
        Look at eminence columns : ZITRANG ZITSUM ZITATE ZITSUM_OD
    **/
    public static function examine_eminence(){
        $rows = \lib::csvAssociative(Config::$data['dirs']['5-newalch-csv'] . DS . Ertel4391::TMP_CSV_FILE);
        $ranks = []; // assoc array rank => nb records with this rank
        
        foreach($rows as $row){
        }
    }
    
    // ******************************************************
    /**
        Look at links to other data sets
        Columns : G_NR PARA_NR CFEPNR CSINR G55
    **/
    public static function examine_eminence(){
        $rows = \lib::csvAssociative(Config::$data['dirs']['5-newalch-csv'] . DS . Ertel4391::TMP_CSV_FILE);
        
        foreach($rows as $row){
        }
    }
}// end class
